@{
    ViewData["Title"] = "Graphview";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Styles{
<link href="~/css/graph.css" rel="stylesheet" />
}
<div class="main my_page ph-new">
    <div class="top-requter18  col-sm-12 branch">
        <h4>
            GEC Patan YEARWISE SELECTION
        </h4>
    </div>
</div>

<div class="rows">

    <!-- block 1 -->

    <div class="g1 col-lg-4 col-sm-4">
        <div class="graph-pnl text-center">
            <h5>STUDENT PLACED</h5>
            <a href="#animatedModal" class="popup-trigger" onclick="openGraph('chart0')" data-target=".popup">
                <!-- data-target="#popup" -->
                <img src="~/images/bargraph1.png" width="289" height="241">
                <br>
                <span>Click to View Graph</span>
            </a>
        </div>

    </div>

    <!-- block 2 -->

    <div class="g1 col-lg-3 col-sm-3">
        <div class="graph-pnl text-center">
            <h5>BRANCH-WISE PLACEMENT</h5>
            <a href="#animatedModal" class="popup-trigger" onclick="openGraph('chart1')" data-target=".popup">
                <!-- data-target="#popup1" -->
                <img src="~/images/piechart1.png" width="289" height="241">
                <br>
                <span>Click to View Graph</span>
            </a>
        </div>
    </div>

    <!-- block 3 -->

    <div class="g1 col-lg-3 col-sm-3">
        <div class="graph-pnl text-center">
            <h5>HIGHEST PACKAGE OFFERED</h5>
            <a href="#animatedModal" class="popup-trigger" onclick="openGraph('chart2')" data-target=".popup">
                <!-- data-target="#popup2" -->
                <img src="~/images/bargraph2.png" width="289" height="241">
                <br>
                <span>Click to View Graph</span>
            </a>
        </div>
    </div>

    <!-- block 4 -->

    <div class="g1 col-lg-3 col-sm-3">
        <div class="graph-pnl text-center">
            <h5>NO. OF COMPANIES VISITED</h5>
            <a href="#animatedModal" class="popup-trigger" onclick="openGraph('chart3')" data-target=".popup">
                <!-- data-target="#popup3"-->
                <img src="~/images/bargraph3.png" width="289" height="241">
                <br>
                <span>Click to View Graph</span>
            </a>
        </div>
    </div>

    <!-- block 5 -->

    <div class="g1 col-lg-3 col-sm-3">
        <div class="graph-pnl text-center">
            <h5>PLACEMENT RECORD </h5>
            <a href="#animatedModal" class="popup-trigger" onclick="openGraph('chart4')" data-target=".popup">
                <img src="~/images/bargraph4.png" width="289" height="241">
                <br>
                <span>Click to View Graph</span>
            </a>
        </div>
    </div>

</div>

@*<script type="text/javascript" src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>*@

<!-- FOR POPUP -->

<div class="popup">
    <!-- <div class="popup-text"> -->
    <!-- <div id="chartdiv0"> -->
    <!-- <div id="test" style="width:100%; height: 450px;display: inline-block;"></div> -->
    <div id="test" style="height: 370px; max-width: 920px; margin: 0px auto;overflow-x: scroll;"></div>
    <script src="../../canvasjs.min.js"></script>
    <!-- </div> -->
    <!-- </div> -->
    <span class="popup-btn-close">&times;</span>
</div>



@section Script{
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script type="text/javascript" src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
<script>

             function toggleDataSeries(e) {
               if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
                 e.dataSeries.visible = false;
               }
               else {
                 e.dataSeries.visible = true;
               }
               chart.render();
             }

             function openGraph(id){
               var chart;
               var number = id;
               if(id=="chart3"){
          $.ajax({
                 url: '/TPO/Graph',
                 data:{number:number},
                 success: function (result) {

                    const dataPoints = [];
                    result.forEach((obj) => {
                    dataPoints.push({ y: obj.noOfCompany, label: obj.placementYear });
                     });
                     CanvasJS.addColorSet("greenShades",
                       [
                             "#88C8A5",
                             "#09F591",
                             "#15CF80",
                             "#78FADA",
                             "#44E1BB",
                             "#1CB18D",
                             "#06644D"
                       ]);
                     chart = new CanvasJS.Chart("test", {
                    animationEnabled: true,
                   colorSet: "greenShades",
                   theme: "light1",
                   title: {
                     text: "NO. OF COMPANIES VISITED"
                   },
                   axisY: {
                     title: "No. Of Companies Visited"
                   },
                   axisX: {
                     title: "YEAR"
                   },
                   width: 450,
                   data: [{
                     type: "column",
                    dataPoints:dataPoints,
                 }]
             });
            chart.render();
            }
         });


           }
           else if(id=="chart4"){
               $.ajax({
                 url: '/TPO/Graph',
                 data:{number:number},
                 success: function (result) {

                    const register = [];
                    const placed = [];
                    result.forEach((obj) => {
                    register.push({ y: obj.placedStudent, label: obj.placementYear });
                    placed.push({ y: obj.numberofRegisterdStudent, label: obj.placementYear });
                     });
                           chart = new CanvasJS.Chart("test", {
               animationEnabled: true,
               title: {
                 text: "PLACEMENTS RECORDS"
               },
               axisY: {
                 title: "Number of students registred",
                 titleFontColor: "#4F81BC",
                 lineColor: "#4F81BC",
                 labelFontColor: "#4F81BC",
                 tickColor: "#4F81BC"
               },
               axisY2: {
                 title: "Placements",
                 titleFontColor: "#C0504E",
                 lineColor: "#C0504E",
                 labelFontColor: "#C0504E",
                 tickColor: "#C0504E"
               },
               toolTip: {
                 shared: true
               },
               legend: {
                 cursor: "pointer",
                 itemclick: toggleDataSeries
               },
               data: [{
                 type: "column",
                 name: "Registred",
                 legendText: "Registred",
                 showInLegend: true,
                 dataPoints: register
               },
               {
                 type: "column",
                 name: "Placed",
                 legendText: "Placed",
                 axisYType: "secondary",
                 showInLegend: true,
                 dataPoints: placed

               }]
             });
            chart.render();
            }
         });

           }
           else if(id=="chart1"){
               $.ajax({
                 url: '/TPO/Graph',
                 data:{number:number},
                 success: function (result) {
                     debugger
                    const dataPoints = [];
                    result.forEach((obj) => {
                        switch(obj.deptId){
                            case 1:
                            dataPoints.push({ y: obj.placedStudent, label: "CSE" });
                            break;
                            case 2:
                            dataPoints.push({ y: obj.placedStudent, label: "CVIL" });
                            break;
                            case 6:
                            dataPoints.push({ y: obj.placedStudent, label: "ME" });
                            break;
                            case 7:
                            dataPoints.push({ y: obj.placedStudent, label: "EE" });
                            break;
                            case 9:
                            dataPoints.push({ y: obj.placedStudent, label: "EC" });
                            break;

                        }

                     });
                      CanvasJS.addColorSet("greenShades",
                 [//colorSet Array

                   "#C71585",
                   "#66CDAA",
                   "#663399",
                   "#2E8B57",
                   "#FF6347"
                 ]);

               var chart = new CanvasJS.Chart("test", {
                 colorSet: "greenShades",
                 animationEnabled: true,
                 title: {
                   text: "BRANCHWISE PLACEMENT"
                 },
                 data: [{
                   type: "pie",
                   startAngle: 240,
                   indexLabel: "{label} {y}",
                   dataPoints: dataPoints
                 }]
               });
               chart.render();
                 }
               });
       }
           else if(id=="chart0"){
                $.ajax({
                 url: '/TPO/Graph',
                 data:{number:number},
                 success: function (result) {

                    const dataPoints = [];
                    result.forEach((obj) => {
                    dataPoints.push({ y: obj.placedStudent, label: obj.placementYear });
                     });
                     CanvasJS.addColorSet("greenShades",
                       [//colorSet Array
                               "#D80D95",
                               "#0DCFD8",
                               "#9E0DD8",
                               "#0DD87C",
                               "#D2D80D",
                               "#0D65AB",
                               "#D8880D"
                       ]);
                     chart = new CanvasJS.Chart("test", {
                     animationEnabled: true,
                     colorSet: "greenShades",
                     theme: "light1", // "light1", "light2", "dark1", "dark2"
                     title: {
                           text: "STUDENTS PLACED"
                            },
                     axisY: {
                           title: "No of Students"
                           },
                     axisX: {
                           title: "YEAR"
                           },
                    options: {
                           maintainAspectRatio: false,

                           },
                    width: 450,
                    data: [{
                    type: "column",
                    dataPoints:dataPoints,
                 }]
             });
            chart.render();
            }
         });
       }

           else if(id=="chart2")
    {

                 $.ajax({
                 url: '/TPO/Graph',
                 data:{number:number},
                 success: function (result) {

                    const dataPoints = [];
                    result.forEach((obj) => {
                    dataPoints.push({ y: obj.higestPackage, label: obj.placementYear });
                     });
                     CanvasJS.addColorSet("greenShades",
                       [//colorSet Array
                                 "#5DCCDA",
                                 "#5D97DA",
                                 "#5D6CDA",
                                 "#7B5DDA",
                                 "#975DDA",
                                 "#BF5DDA",
                                 "#DA5DCC"
                       ]);
                     chart = new CanvasJS.Chart("test", {
                     animationEnabled: true,
                     colorSet: "greenShades",
                     theme: "light1", // "light1", "light2", "dark1", "dark2"
                      title: {
                 text: "HIGHEST PACKAGE OFFERED"
               },
               axisY: {
                 title: "Highest Package",
                 includeZero: false
               },
               axisX: {
                 title: "BATCH"
               },
               width: 450,
               data: [{
                 type: "column",
                 dataPoints:dataPoints,
                 }]
             });
            chart.render();
            }
         });

    }
           else{}
             chart.render();
             }

</script>

<script>
    function popupOpenClose(popup) {

      /* Add div inside popup for layout if one doesn't exist */
      if ($(".wrapper", popup).length == 0) {
        $(popup).wrapInner("<div class='wrapper'></div>");
      }

      /* Open popup */
      $(popup).show();

      /* Close popup if user clicks on background */
      $(popup).click(function (e) {
        if (e.target == this) {
          if ($(popup).is(':visible')) {
            $(popup).hide();
          }
        }
      });

      /* Close popup and remove errors if user clicks on cancel or close buttons */
      $(popup).find(".popup-btn-close").on("click", function () {
        if ($(".formElementError").is(':visible')) {
          $(".formElementError").remove();
        }
        $(popup).hide();
      });
    }

    $(document).ready(function () {
      $(".popup-trigger").on("click", function () {
        var target = $(this).data('target');
        popupOpenClose($(target));
      });
    });
</script>

}




